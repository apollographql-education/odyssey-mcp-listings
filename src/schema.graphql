schema @link(url: "https://specs.apollo.dev/link/v1.0") {
  query: Query
  mutation: Mutation
}

extend schema
  @link(
    url: "https://specs.apollo.dev/federation/v2.7"
    import: ["@key", "@shareable", "@external"]
  )

directive @link(
  url: String
  as: String
  for: link__Purpose
  import: [link__Import]
) repeatable on SCHEMA

directive @key(
  fields: federation__FieldSet!
  resolvable: Boolean = true
) repeatable on OBJECT | INTERFACE

directive @federation__requires(
  fields: federation__FieldSet!
) on FIELD_DEFINITION

directive @federation__provides(
  fields: federation__FieldSet!
) on FIELD_DEFINITION

directive @external(reason: String) on OBJECT | FIELD_DEFINITION

directive @federation__tag(
  name: String!
) repeatable on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION | SCHEMA

directive @federation__extends on OBJECT | INTERFACE

directive @shareable repeatable on OBJECT | FIELD_DEFINITION

directive @federation__inaccessible on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @federation__override(
  from: String!
  label: String
) on FIELD_DEFINITION

directive @federation__composeDirective(name: String) repeatable on SCHEMA

directive @federation__interfaceObject on OBJECT

directive @federation__authenticated on FIELD_DEFINITION | OBJECT | INTERFACE | SCALAR | ENUM

directive @federation__requiresScopes(
  scopes: [[federation__Scope!]!]!
) on FIELD_DEFINITION | OBJECT | INTERFACE | SCALAR | ENUM

directive @federation__policy(
  policies: [[federation__Policy!]!]!
) on FIELD_DEFINITION | OBJECT | INTERFACE | SCALAR | ENUM

directive @federation__sourceAPI repeatable on SCHEMA

directive @federation__sourceType repeatable on OBJECT | INTERFACE

directive @federation__sourceField repeatable on FIELD_DEFINITION

"""
Listing Graph
"""
type Query {
  """
  A curated array of listings to feature on the homepage
  """
  featuredListings: [Listing!]!

  """
  Search results for listings that fit the criteria provided
  """
  searchListings(criteria: SearchListingsInput): [Listing!]!

  """
  Return the listings that belong to the currently logged-in host
  """
  hostListings: [Listing!]!

  """
  Returns the details about this listing
  """
  listing(id: ID!): Listing

  """
  Returns all possible amenities for a listing
  """
  listingAmenities: [Amenity!]!
  _entities(representations: [_Any!]!): [_Entity]!
  _service: _Service!
}

type Mutation {
  """
  Creates a new listing for the currently authenticated host
  """
  createListing(listing: CreateListingInput!): CreateListingResponse!

  """
  Updates an existing listing
  """
  updateListing(
    listingId: ID!
    listing: UpdateListingInput!
  ): UpdateListingResponse!
}

interface MutationResponse {
  """
  Similar to HTTP status code, represents the status of the mutation
  """
  code: Int!

  """
  Indicates whether the mutation was successful
  """
  success: Boolean!

  """
  Human-readable message for the UI
  """
  message: String!
}

type Listing @key(fields: "id") {
  id: ID!

  """
  The listing's title
  """
  title: String!

  """
  The listing's description
  """
  description: String!

  """
  The thumbnail image for the listing
  """
  photoThumbnail: String!

  """
  Photo edited for homepage
  """
  photoInHexagonShape: String @deprecated(reason: "Unused field.")

  """
  The number of beds available
  """
  numOfBeds: Int!

  """
  The cost per night
  """
  costPerNight: Float!

  """
  The location type of the listing
  """
  locationType: LocationType!

  """
  Owner of the listing
  """
  host: Host!

  """
  The amenities available for this listing
  """
  amenities: [Amenity]!

  """
  Where this listing is located in the galaxy
  """
  coordinates: GalacticCoordinates
}

"""
Coordinates in the galaxy
"""
type GalacticCoordinates @shareable {
  latitude: Float!
  longitude: Float!
  nickname: String
}

type Amenity {
  id: ID!
  category: AmenityCategory!
  name: String!
}

enum AmenityCategory {
  ACCOMMODATION_DETAILS
  SPACE_SURVIVAL
  OUTDOORS
}

enum LocationType {
  SPACESHIP
  HOUSE
  CAMPSITE
  APARTMENT
  ROOM
}

input SearchListingsInput {
  checkInDate: String!
  checkOutDate: String!
  numOfBeds: Int
  page: Int
  limit: Int
  sortBy: SortByCriteria
}

enum SortByCriteria {
  COST_ASC
  COST_DESC
  RATING_DESC
}

input CreateListingInput {
  """
  The listing's title
  """
  title: String!

  """
  The listing's description
  """
  description: String!

  """
  The thumbnail image for the listing
  """
  photoThumbnail: String!

  """
  The number of beds available
  """
  numOfBeds: Int!

  """
  The cost per night
  """
  costPerNight: Float!

  """
  The location type of the listing
  """
  locationType: LocationType!

  """
  The Listing's amenities
  """
  amenities: [ID!]!
}

"""
Updates the properties included. If none are given, don't update anything
"""
input UpdateListingInput {
  """
  The listing's title
  """
  title: String

  """
  The listing's description
  """
  description: String

  """
  The thumbnail image for the listing
  """
  photoThumbnail: String

  """
  The number of beds available
  """
  numOfBeds: Int

  """
  The cost per night
  """
  costPerNight: Float

  """
  The location type of the listing
  """
  locationType: LocationType

  """
  The Listing's amenities
  """
  amenities: [ID]
}

type CreateListingResponse implements MutationResponse {
  """
  Similar to HTTP status code, represents the status of the mutation
  """
  code: Int!

  """
  Indicates whether the mutation was successful
  """
  success: Boolean!

  """
  Human-readable message for the UI
  """
  message: String!

  """
  The newly created listing
  """
  listing: Listing
}

type UpdateListingResponse implements MutationResponse {
  """
  Similar to HTTP status code, represents the status of the mutation
  """
  code: Int!

  """
  Indicates whether the mutation was successful
  """
  success: Boolean!

  """
  Human-readable message for the UI
  """
  message: String!

  """
  The newly created listing
  """
  listing: Listing
}

type Host @key(fields: "id", resolvable: false) {
  id: ID!
}

enum link__Purpose {
  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY

  """
  `EXECUTION` features provide metadata necessary for operation execution.
  """
  EXECUTION
}

scalar link__Import

scalar federation__FieldSet

scalar federation__Scope

scalar federation__Policy

scalar _Any

type _Service {
  sdl: String
}

union _Entity = Host | Listing
